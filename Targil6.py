# -*- coding: utf-8 -*-
"""Targil6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-pvb5SuBuqUgyGoMN7r1DaqsmzINzR8_

**Ranit Zohar , **



**Aviah Miriam Yadler , **

תרגיל 6 סעיף 1
"""

def square(num: int) -> (int,str):
    return (num * num, f"\n{num}*{num}= {num * num}") if not num is None else (None, f"Can't raise squared None")

def strChangched(num: int) -> (str,str):
  return (str(num) , f"\n'{num}' converted to string type") if not num is None else (None, f"Can't convert None to become string")

def signChangched(num: int) -> (int,str):
  return (num*-1 , f"\n{num} * -1 = {num * -1}") if not num is None else (None, f"Can't multiply None")

def intChangched(s : str) -> (int, str):
  return ( int(s), f"\n'{s}' converted to int type" ) if s.isdigit() else (None, f"\nA non-numeric string '{s}' will not return a value and convert to int\n")

class Monad:
  def __init__(self,value,context =''):
    self.val = value
    self.conx = context
  def __or__(self, func):
    res = func(self.val)
    return Monad(res[0], self.conx + res[1]) 
  def __str__(self):
    return f"{self.val} {self.conx}"
  def __repr__(self):
    return super().__repr__()

print( Monad(2) | square  | signChangched  | strChangched | intChangched )

print( Monad('2') | intChangched | square | signChangched | strChangched)